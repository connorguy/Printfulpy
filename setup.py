# coding: utf-8

"""
    API Documentation | Printful

    # About the Printful API The Printful API is a RESTful API, that uses an HTTP protocol for communication. HTTP GET, POST, PUT and DELETE methods are used to access the API resources.  ## Requests and responses  ### Request endpoint All API requests have to be sent to this URL: ``` https://api.printful.com/ ``` If you are using a proxy, make sure that all requests have host header set to **api.printful.com**.  ### Request parameters Some mandatory parameters (like object identifiers) must be included in the request URL path ``` GET /orders/123 ``` Additional parameters can be passed as GET variables: ``` GET /orders?offset=10&limit=5 ``` For POST and PUT requests, a more complex data structure can be passed as JSON encoded data in the request body: ``` POST /orders  {\"recipient\":{...},\"items\":[...]} ```  ### Response body The response body is always a JSON object that contains a response status code (identical to the HTTP status code) and the result of the action. If the status code is 200, then the action was successful. ``` {    \"code\": 200, //Response status code    \"result\":{       //API method return data    //...    } } ```  Sometimes the response includes paging information to allow to browse larger result sets by adding offset and limit GET parameters to the request URL. ``` {    \"code\": 200, //Response status code    \"result\":[     {        //Item 11     },     {        //Item 12     }    ]    \"paging\": {       \"total\": 12,  //Total items available       \"offset\": 10, //Items skipped from the beginning       \"limit\": 20   //Number of items per page    } } ```  ## Error response If the API call is not successful, then the response code is not in the 2xx range and the `result` attribute contains an error description. ``` {     \"code\": 404,     \"result\": \"Not Found\",     \"error\": {         \"reason\": \"NotFound\",         \"message\": \"Not Found\"     } } ```  In general, response codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing, etc.), and codes in the 5xx range indicate an error with Printful's servers.  ### Timestamps All timestamps from the API are returned as integers in UNIX timestamp format.  ### Rate Limits Printful API has a general rate limit of 120 API calls per minute. Additionally, endpoints that perform resource intensive operations (such as mockup generator) have a lower allowed request limit.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: devsupport@printful.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from setuptools import setup, find_packages  # noqa: H301

NAME = "printfulpy"
VERSION = "1.0.0"
# To install the library, run the following
#
# python setup.py install
#
# prerequisite: setuptools
# http://pypi.python.org/pypi/setuptools

REQUIRES = ["urllib3 >= 1.15", "six >= 1.10", "certifi", "python-dateutil"]

setup(
    name=NAME,
    version=VERSION,
    description="API Documentation | Printful",
    author_email="devsupport@printful.com",
    url="",
    keywords=["Swagger", "API Documentation | Printful"],
    install_requires=REQUIRES,
    packages=find_packages(),
    include_package_data=True,
    long_description="""\
    # About the Printful API The Printful API is a RESTful API, that uses an HTTP protocol for communication. HTTP GET, POST, PUT and DELETE methods are used to access the API resources.  ## Requests and responses  ### Request endpoint All API requests have to be sent to this URL: &#x60;&#x60;&#x60; https://api.printful.com/ &#x60;&#x60;&#x60; If you are using a proxy, make sure that all requests have host header set to **api.printful.com**.  ### Request parameters Some mandatory parameters (like object identifiers) must be included in the request URL path &#x60;&#x60;&#x60; GET /orders/123 &#x60;&#x60;&#x60; Additional parameters can be passed as GET variables: &#x60;&#x60;&#x60; GET /orders?offset&#x3D;10&amp;limit&#x3D;5 &#x60;&#x60;&#x60; For POST and PUT requests, a more complex data structure can be passed as JSON encoded data in the request body: &#x60;&#x60;&#x60; POST /orders  {\&quot;recipient\&quot;:{...},\&quot;items\&quot;:[...]} &#x60;&#x60;&#x60;  ### Response body The response body is always a JSON object that contains a response status code (identical to the HTTP status code) and the result of the action. If the status code is 200, then the action was successful. &#x60;&#x60;&#x60; {    \&quot;code\&quot;: 200, //Response status code    \&quot;result\&quot;:{       //API method return data    //...    } } &#x60;&#x60;&#x60;  Sometimes the response includes paging information to allow to browse larger result sets by adding offset and limit GET parameters to the request URL. &#x60;&#x60;&#x60; {    \&quot;code\&quot;: 200, //Response status code    \&quot;result\&quot;:[     {        //Item 11     },     {        //Item 12     }    ]    \&quot;paging\&quot;: {       \&quot;total\&quot;: 12,  //Total items available       \&quot;offset\&quot;: 10, //Items skipped from the beginning       \&quot;limit\&quot;: 20   //Number of items per page    } } &#x60;&#x60;&#x60;  ## Error response If the API call is not successful, then the response code is not in the 2xx range and the &#x60;result&#x60; attribute contains an error description. &#x60;&#x60;&#x60; {     \&quot;code\&quot;: 404,     \&quot;result\&quot;: \&quot;Not Found\&quot;,     \&quot;error\&quot;: {         \&quot;reason\&quot;: \&quot;NotFound\&quot;,         \&quot;message\&quot;: \&quot;Not Found\&quot;     } } &#x60;&#x60;&#x60;  In general, response codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing, etc.), and codes in the 5xx range indicate an error with Printful&#x27;s servers.  ### Timestamps All timestamps from the API are returned as integers in UNIX timestamp format.  ### Rate Limits Printful API has a general rate limit of 120 API calls per minute. Additionally, endpoints that perform resource intensive operations (such as mockup generator) have a lower allowed request limit.  # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;  # noqa: E501
    """
)
